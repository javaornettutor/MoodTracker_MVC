// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MoodTracker_MVC.Models;

public partial class MoodTracker2Context : DbContext
{
    public MoodTracker2Context(DbContextOptions<MoodTracker2Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Mood> Moods { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserLogin> UserLogins { get; set; }

    public virtual DbSet<UserMood> UserMoods { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Mood>(entity =>
        {
            entity.HasKey(e => e.MoodId).HasName("PK__Mood__E8B0F6F4B11A5039");

            entity.ToTable("Mood");

            entity.Property(e => e.MoodId).HasColumnName("MoodID");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CC4C0FCEC723");

            entity.ToTable("User");

            entity.HasIndex(e => e.Email, "UQ__Users__A9D10534A307B581").IsUnique();

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<UserLogin>(entity =>
        {
            entity.HasKey(e => e.LoginId).HasName("PK__UserLogi__4DDA28185E6343AA");

            entity.ToTable("UserLogin");

            entity.HasIndex(e => e.Username, "UQ__UserLogi__536C85E4FB60FAE0").IsUnique();

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.User).WithMany(p => p.UserLogins)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UserLogin__UserI__44FF419A");
        });

        modelBuilder.Entity<UserMood>(entity =>
        {
            entity.HasKey(e => e.MoodId).HasName("PK__UserMood__E8B0F6F49827FD22");

            entity.ToTable("UserMood");

            entity.Property(e => e.MoodId).HasColumnName("MoodID");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.MoodComments).HasMaxLength(255);

            entity.HasOne(d => d.MoodTypeNavigation).WithMany(p => p.UserMoods)
                .HasForeignKey(d => d.MoodType)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserMood_Mood");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}